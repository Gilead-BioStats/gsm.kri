% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Report_KRI.R
\name{Report_KRI}
\alias{Report_KRI}
\title{Report_KRI function}
\usage{
Report_KRI(
  lCharts = NULL,
  dfResults = NULL,
  dfGroups = NULL,
  dfMetrics = NULL,
  strOutputDir = getwd(),
  strOutputFile = NULL
)
}
\arguments{
\item{lCharts}{A list of charts to include in the report.}

\item{dfResults}{`data.frame` A stacked summary of analysis pipeline output.
Created by passing a list of results returned by [Summarize()] to
[BindResults()]. Expected columns: `GroupID`, `GroupLevel`, `Numerator`,
`Denominator`, `Metric`, `Score`, `Flag`, `MetricID`, `StudyID`,
`SnapshotDate`.}

\item{dfGroups}{`data.frame` Group-level metadata dictionary. Created by
passing CTMS site and study data to [MakeLongMeta()]. Expected columns:
`GroupID`, `GroupLevel`, `Param`, `Value`.}

\item{dfMetrics}{`data.frame` Metric-specific metadata for use in charts and
reporting. Created by passing an `lWorkflow` object to [MakeMetric()].
Expected columns: `File`, `MetricID`, `Group`, `Abbreviation`, `Metric`,
`Numerator`, `Denominator`, `Model`, `Score`, and `Threshold`. For more
details see the Data Model vignette: `vignette("DataModel", package =
"gsm")`.}

\item{strOutputDir}{The output directory path for the generated report. If not provided,
the report will be saved in the current working directory.}

\item{strOutputFile}{The output file name for the generated report. If not provided,
the report will be named based on the study ID, Group Level and Date.}
}
\value{
File path of the saved report html is returned invisibly. Save to object to view absolute output path.
}
\description{
`r lifecycle::badge("stable")`

This function generates a KRI report based on the provided inputs.
}
\examples{
\dontrun{
# Run site-level KRI report.
lChartsSite <- MakeCharts(
  dfResults = gsm::reportingResults,
  dfGroups = gsm::reportingGroups,
  dfMetrics = gsm::reportingMetrics,
  dfBounds = gsm::reportingBounds
)

strOutputFile <- "StandardSiteReport.html"
kri_report_path <- Report_KRI(
  lCharts = lChartsSite,
  dfResults = gsm::reportingResults,
  dfGroups = gsm::reportingGroups,
  dfMetrics = gsm::reportingMetrics,
  strOutputFile = strOutputFile
)

# Run country-level KRI report.
lChartsCountry <- MakeCharts(
  dfResults = gsm::reportingResults_country,
  dfGroups = gsm::reportingGroups_country,
  dfMetrics = gsm::reportingMetrics_country,
  dfBounds = gsm::reportingBounds_country
)

strOutputFile <- "StandardCountryReport.html"
kri_report_path <- Report_KRI(
  lCharts = lChartsCountry,
  dfResults = gsm::reportingResults_country,
  dfGroups = gsm::reportingGroups_country,
  dfMetrics = gsm::reportingMetrics_country,
  strOutputFile = strOutputFile
)
}

}
\keyword{KRI}
\keyword{report}
