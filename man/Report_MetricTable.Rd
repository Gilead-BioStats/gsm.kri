% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Report_MetricTable.R
\name{Report_MetricTable}
\alias{Report_MetricTable}
\title{Generate a summary table for a report}
\usage{
Report_MetricTable(
  dfResults,
  dfGroups = NULL,
  strGroupLevel = c("Site", "Country", "Study"),
  strGroupDetailsParams = NULL,
  vFlags = c(-2, -1, 1, 2)
)
}
\arguments{
\item{dfResults}{`r gloss_param("dfResults")` `r gloss_extra("dfResults_filtered")`}

\item{dfGroups}{`data.frame` Group-level metadata dictionary. Created by
passing CTMS site and study data to [MakeLongMeta()]. Expected columns:
`GroupID`, `GroupLevel`, `Param`, `Value`.}

\item{strGroupLevel}{group level for the table}

\item{strGroupDetailsParams}{one or more parameters from dfGroups to be added
as columns in the table}

\item{vFlags}{`integer` List of flag values to include in output table.
Default: `c(-2, -1, 1, 2)`.}
}
\value{
A [gt::gt()] containing the summary table.
}
\description{
`r lifecycle::badge("stable")`

This function generates a summary table for a report by joining the provided
results data frame with the site-level metadata from dfGroups. It then
filters and arranges the data based on certain conditions and displays the
result in a datatable.
}
\examples{
# site-level report
Report_MetricTable(
  dfResults = gsm::reportingResults \%>\%
    dplyr::filter(.data$MetricID == "Analysis_kri0001") \%>\%
    FilterByLatestSnapshotDate(),
  dfGroups = gsm::reportingGroups
)

}
